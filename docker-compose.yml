services:
  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: mongodb_letsplay
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=password
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - letsplay-network

  # Spring Boot API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: letsplay_api
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy
    environment:
      # MongoDB connection with authentication
      - SPRING_DATA_MONGODB_URI=mongodb://root:password@mongodb:27017/letsplay?authSource=admin
      - SPRING_DATA_MONGODB_DATABASE=letsplay

      # JWT Configuration (REQUIRED - set in .env file)
      - JWT_SECRET=${JWT_SECRET}

      # CORS Configuration (optional)
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:4200,https://localhost}

      # Rate Limiting (optional)
      - RATELIMIT_CAPACITY=${RATELIMIT_CAPACITY:-5}
      - RATELIMIT_REFILL_MINUTES=${RATELIMIT_REFILL_MINUTES:-1}

      # Spring Boot Profile
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-prod}

      # Reverse Proxy Configuration
      - SERVER_FORWARD_HEADERS_STRATEGY=FRAMEWORK
      - SERVER_TOMCAT_REMOTEIP_REMOTE_IP_HEADER=X-Forwarded-For
      - SERVER_TOMCAT_REMOTEIP_PROTOCOL_HEADER=X-Forwarded-Proto
    networks:
      - letsplay-network
    healthcheck:
      test: ["CMD", "sh", "-c", "nc -z localhost 8080 || exit 1"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

networks:
  letsplay-network:
    driver: bridge

volumes:
  mongodb_data:
